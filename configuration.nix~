{
  lib,
  pkgs,
  ...
}:

{
  imports = [ ./hardware-configuration.nix ];
  fileSystems."/persist".neededForBoot = true;
  nixpkgs.config.allowUnfree = true;
  nix.settings.experimental-features = [
    "flakes"
    "nix-command"
  ];
  # gamemoderun, gamescope %command%

  users.users.abacaxinera = {
    isNormalUser = true;
    initialPassword = "1590";
    extraGroups = [ "wheel" ];
  };

  networking.hostName = "poderoso";
  networking.networkmanager.enable = true;
  time.timeZone = "America/Toronto";
  
  programs = {
    command-not-found.enable = false;
    steam.enable = true;
    steam.gamescopeSession.enable = true;
    gamemode.enable = true;
    nh ={
      enable = true;
      flake = "/home/abacaxinera/dotfiles";
    };
  };

  hardware = {
    graphics = {
      enable = true;
      enable32Bit = true;
    };
    pulseaudio.enable = false;

    nvidia = {
      modesetting.enable = true;
      prime.sync.enable = true;
      prime.intelBusId = "PCI:0:02:0";
      prime.nvidiaBusId = "PCI:01:0:0";
    };
  };

  boot = {
    loader.systemd-boot.enable = true;
    loader.efi.canTouchEfiVariables = true;
    initrd.postDeviceCommands = lib.mkAfter ''
    mkdir /btrfs_tmp
    mount /dev/root_vg/root /btrfs_tmp
    if [[ -e /btrfs_tmp/root ]]; then
        mkdir -p /btrfs_tmp/old_roots
        timestamp=$(date --date="@$(stat -c %Y /btrfs_tmp/root)" "+%Y-%m-%-d_%H:%M:%S")
        mv /btrfs_tmp/root "/btrfs_tmp/old_roots/$timestamp"
    fi

    delete_subvolume_recursively() {
        IFS=$'\n'
        for i in $(btrfs subvolume list -o "$1" | cut -f 9- -d ' '); do
            delete_subvolume_recursively "/btrfs_tmp/$i"
        done
        btrfs subvolume delete "$1"
    }

    for i in $(find /btrfs_tmp/old_roots/ -maxdepth 1 -mtime +30); do
        delete_subvolume_recursively "$i"
    done

    btrfs subvolume create /btrfs_tmp/root
    umount /btrfs_tmp
  '';
  };

  services = {
    xserver = {
      enable = true;
      displayManager.gdm.enable = true;
      desktopManager.gnome.enable = true;
      excludePackages = [ pkgs.xterm ];
      videoDrivers = [ "nvidia" ];
    };

    udev.packages = with pkgs; [ gnome.gnome-settings-daemon ];
    gnome.core-utilities.enable = false;
    pipewire.enable = true;
    pipewire.pulse.enable = true;
    
    # printing.enable = true;
  };
  

  environment = {
    gnome.excludePackages = with pkgs; [ gnome-tour ];
    sessionVariables = {
      STEAM_EXTRA_COMPAT_TOOLS_PATHS = "/home/abacaxinera/.steam/root/compatibilitytools.d";
    };

    
    persistence."/persist/system" = {
      hideMounts = true;
      directories = [
        "/var/log"
        "/var/lib/systemd/coredump"
        "/etc/nixos"
        "/var/lib/bluetooth"
        "/etc/NetworkManager/system-connections"
      ];
      files = [
        "/etc/machine-id"
        "/.config/motinors.xml"
      ];
      users.abacaxinera = {
        directories = [
          ".mozilla"
          ".local/share/Steam"
          "proyectos"
          "dotfiles"
        ];
      };

    };

    etc."nixos-generation".source = ./.;
    # systemPackages = with pkgs; [];
  };
  
  system.stateVersion = "24.05";
}

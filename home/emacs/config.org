#+title: Emacs Configuration
#+property: header-args:emacs-lisp :tangle yes :results output none

* Apparence
** General Settings
#+begin_src emacs-lisp
  (setopt default-frame-alist '((undecorated . t))
          frame-resize-pixelwise t)
  
  (menu-bar-mode -1)
  (tool-bar-mode -1)
  (scroll-bar-mode -1)
  (pixel-scroll-precision-mode)
  (global-set-key [f12] 'eval-buffer)
  (global-display-line-numbers-mode 1)

  (setopt tab-always-indent 'complete
        visible-bell t
        read-extended-command-predicate #'command-completion-default-include-p
        text-mode-ispell-word-completion nil
        line-spacing 2)
  (add-hook 'prog-mode 'hs-minor-mode)

    (electric-pair-mode) 
  (delete-selection-mode t)
  (global-aggressive-indent-mode)
#+end_src
** Themes
#+begin_src emacs-lisp
    (defvar my-themes '(ef-bio ef-frost exotica))

    (defun cycle-themes ()
      (interactive)
      (let* ((current-theme (car custom-enabled-themes))
             (next-theme (or (cadr (member current-theme my-themes))
                             (car my-themes))))
        (disable-theme current-theme)
        (load-theme next-theme t)
        (message "%s" next-theme)))

    (load-theme (car my-themes) t)
    (global-set-key (kbd "C-\\") 'cycle-themes)

  (add-to-list 'default-frame-alist '(font . "Fantasque Sans Mono"))
#+end_src

* Editing
** Linting
#+begin_src emacs-lisp
  (require 'flycheck)
  (setopt flycheck-emacs-lisp-load-path 'inherit)
  (global-flycheck-mode)
  (defun disable-flycheck-in-org-src-block ()
    (setq-local flycheck-disabled-checkers '(emacs-lisp-checkdoc)))
  (add-hook 'org-src-mode-hook #'disable-flycheck-in-org-src-block)
#+end_src

** Completion
#+begin_src emacs-lisp

  (global-corfu-mode)
  (setopt corfu-auto nil)

  (setopt completion-styles '(orderless basic)
        completion-category-defaults nil
        completion-category-overrides '((file (styles partial-completion)))
        read-file-name-completion-ignore-case t
        read-buffer-completion-ignore-case t
        completion-ignore-case t)

  (setopt marginalia-align 'right)
  (marginalia-mode)

  (when (display-graphic-p)
    (require 'all-the-icons)
    (all-the-icons-completion-mode)
    (add-hook 'marginalia-mode-hook #'all-the-icons-completion-marginalia-setup))

  (setopt vertico-count 15
        vertico-resize nil
        vertico-cycle t)
  (vertico-mode)

  (which-key-mode)

    (setopt lsp-keymap-prefix "C-c l")
  (require 'lsp-mode)
  (add-hook 'nix-mode-hook #'lsp-deferred)
  (add-hook 'lsp-mode-hook #'lsp-enable-which-key-integration)
#+end_src

* Project Management
** General Settings
#+begin_src emacs-lisp
  (require 'projectile)
  (projectile-mode)
  (define-key projectile-mode-map (kbd "C-c p") 'projectile-command-map)
  (setopt projectile-project-search-path '("~/proyectos/"))
#+end_src

** File Tree
#+begin_src emacs-lisp
  ;; (add-hook 'emacs-startup-hook 'treemacs)
  (setopt treemacs-position 'right)
  (with-eval-after-load 'treemacs)
#+end_src


* Orgmode
** General Settings
#+begin_src emacs-lisp
          (custom-set-faces
           '(org-document-title ((t (:height 1.50))))
           '(org-level-1 ((t (:height 1.37))))
           '(org-level-2 ((t (:height 1.25))))
           '(org-level-3 ((t (:height 1.12)))))
          (setopt org-startup-indented t
                  org-startup-align-all-tables t
                  org-startup-numerated nil
                  org-hide-leading-stars t
                  org-return-follows-link  t
                  org-support-shift-select t)
            (add-hook 'org-mode-hook 'org-indent-mode)
            (add-hook 'org-mode-hook 'visual-line-mode)

          (add-hook 'org-mode-hook 'org-appear-mode)
            (setopt org-hide-emphasis-markers t)

        (add-hook 'org-mode-hook 'org-superstar-mode)
        (setopt org-confirm-babel-evaluate nil
                initial-major-mode 'org-mode
                initial-scratch-message "#+title: scratch buffer\n")

        (setq org-emphasis-alist
        '(("*" bold)
          ("/" italic)
          ("_" underline)
          ("=" (:foreground "red") verbatim) ;;#6d7f87
          ("~" org-code verbatim)
          ("+" (:strike-through t))))

#+end_src

** LaTeX Export
#+begin_src emacs-lisp
  (with-eval-after-load 'ox-latex
  (add-to-list 'org-latex-classes
               '("org-plain-latex"
                 "\\documentclass{article}
             [NO-DEFAULT-PACKAGES]
             [PACKAGES]
             [EXTRA]"
                 ("\\section{%s}" . "\\section*{%s}")
                 ("\\subsection{%s}" . "\\subsection*{%s}")
                 ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
                 ("\\paragraph{%s}" . "\\paragraph*{%s}")
                 ("\\subparagraph{%s}" . "\\subparagraph*{%s}"))))
  (setq org-latex-listings 't)
#+end_src

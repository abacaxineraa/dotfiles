R{
  config,
  pkgs,
  lib,
  ...
}:

{
  imports = [ ./modules/home-manager/emacs.nix ./dconfsettings.nix ];
  home.username = "abacaxinera";
  home.homeDirectory = "/home/abacaxinera";
  home.stateVersion = "24.05";
  
  fonts.fontconfig.enable = true;
  
  home.packages = with pkgs; [
    wget
    gnome-tweaks
    gnome-console
    protonup
    nautilus
    discord
    spotify
    git
    godot_4
    emacs-all-the-icons-fonts
    unzip
  ];
  
  programs = {
    fish = {
      enable = true;
      shellAliases = {
        cat = "${pkgs.bat}/bin/bat";
        ls = "${pkgs.eza}/bin/eza";
      };
    functions = {
      fish_greeting = "${pkgs.fortune}/bin/fortune | ${pkgs.cowsay}/bin/cowsay";
    };
    };

    starship = {
      enable = true;
      enableTransience = true;
    };

    direnv = {
      enable = true;
      nix-direnv.enable = true;
    };

    bash = {
      enable = true;
      initExtra = ''
        if [[ $(${pkgs.procps}/bin/ps -o comm= $PPID) != "fish" && -z "$BASH_EXECUTION_STRING" ]]
        then
          shopt -q login_shell && LOGIN_OPTION='--login' || LOGIN_OPTION=""
          exec ${config.programs.fish.package}/bin/fish $LOGIN_OPTION
        fi
      '';
    };

    gnome-shell = {
      enable = true;
      extensions = [
        { package = pkgs.gnomeExtensions.pop-shell; }
        { package = pkgs.gnomeExtensions.appindicator; }
      ];
    };

    emacs = {
      enable = true;
      package = pkgs.emacs29-pgtk;
      extraConfig = builtins.readFile ./emacs.org;
      extraConfigTangle = true;
      extraPathPackages = with pkgs; [
        nixfmt-rfc-style
        texlive.combined.scheme-full
        wl-clipboard
        nixd
      ];
      extraEmacsPackages =
        epkgs: with epkgs; [
          htmlize
          corfu-terminal
          nix-mode
          exotica-theme
          chyla-theme
          white-sand-theme
          gruvbox-theme
          aggressive-indent
          corfu
          orderless
          marginalia
          all-the-icons
          all-the-icons-completion
          vertico
          which-key
          org-appear
          org-superstar
          lsp-mode
          flycheck
          treemacs
        ];
    };

    firefox = {
      enable = true;
      enableGnomeExtensions = true;
      package = pkgs.firefox-devedition;
      policies = {
        DisableFirefoxAccounts = true;
        DisableAppUpdate = true;
        CaptivePortal = false;
        DNSOverHTTPS.Enabled = false;
        DisableFirefoxStudies = true;
        DisableTelemetry = true;
        DisablePocket = true;
      };
      profiles.dev-edition-default = {
        #
      };
    };
  };

  services.emacs = {
    enable = true;
    package = config.programs.emacs.finalPackage;
    defaultEditor = true;
    client.enable = true;
  };

  xdg.configFile = {
    "/pop-shell/config.json".text = ''
      {
        "float": [
          {
            "class": "firefox",
            "title": "^(?!.*Mozilla Firefox).*$",
            "disabled": true
          }
        ],
        "skiptaskbarhidden": [],
        "log_on_focus": false
      }
    '';
  };
}
